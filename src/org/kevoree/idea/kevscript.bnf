
{
  parserClass="org.kevoree.idea.parser.KevScriptParser"
  stubParserClass="org.kevoree.idea.parser.GeneratedParserUtilBase"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="KevScript"
  psiImplClassSuffix="Impl"
  psiPackage="org.kevoree.idea.psi"
  psiImplPackage="org.kevoree.idea.psi.impl"

  elementTypeHolderClass="org.kevoree.idea.psi.KevScriptTypes"
  elementTypeClass="org.kevoree.idea.psi.KevScriptElementType"
  tokenTypeClass="org.kevoree.idea.psi.KevScriptTokenType"

tokens=[
    newline = 'regexp:\n\t'
    START='start'
    STOP='stop'
    ADD='add'
    REMOVE='remove'
    BIND='bind'
    UNBIND='unbind'
    ATTACH='attach'
    DETACH='detach'
    NAMESPACE='namespace'
    SET='set'
    REPO='repo'
    INCLUDE='include'
    MOVE='move'
    NETWORK='network'
    COLON=':'
    COMMA=','
    SUB='/'
    EQ='='
    eof = '<<EOF>>'
    comment='regexp://.*'
    IDENT='regexp:[\*\.a-zA-Z0-9_\-]+'
    string="regexp:('([^'\\]|\\.)*'|\"([^\"\\]|\\.)*\")"
  ]

}

KEVSCRIPT ::= ACTIONS*
ACTIONS ::= ( ADD_STATEMENT | SET_STATEMENT | REMOVE_STATEMENT | BIND_STATEMENT | UNBIND_STATEMENT | ATTACH_STATEMENT | DETACH_STATEMENT | START_STATEMENT | STOP_STATEMENT | NAMESPACE_STATEMENNT | REPO_STATEMENNT | INCLUDE_STATEMENNT | MOVE_STATEMENT | NETWORK_STATEMENT | eof | newline | CRLF )
private ADD_STATEMENT ::= ADD IDENT COMMA_SEP* COLON IDENT (SUB IDENT)? {pin=2 recoverWhile=rule_start}
private REMOVE_STATEMENT ::= REMOVE IDENT COMMA_SEP* {pin=2 recoverWhile=rule_start}
private BIND_STATEMENT ::= BIND IDENT COMMA_SEP* IDENT {pin=2 recoverWhile=rule_start}
private UNBIND_STATEMENT ::= UNBIND IDENT COMMA_SEP* IDENT {pin=2 recoverWhile=rule_start}
private ATTACH_STATEMENT ::= ATTACH IDENT COMMA_SEP* IDENT {pin=2 recoverWhile=rule_start}
private DETACH_STATEMENT ::= DETACH IDENT COMMA_SEP* IDENT {pin=2 recoverWhile=rule_start}
private NAMESPACE_STATEMENNT ::= NAMESPACE IDENT {pin=2 recoverWhile=rule_start}
private REPO_STATEMENNT ::= REPO string {pin=2 recoverWhile=rule_start}
private INCLUDE_STATEMENNT ::= INCLUDE IDENT COLON_SEP* {pin=2 recoverWhile=rule_start}
private MOVE_STATEMENT ::= MOVE IDENT COMMA_SEP* IDENT {pin=2 recoverWhile=rule_start}
private NETWORK_STATEMENT ::= NETWORK IDENT IDENT {pin=2 recoverWhile=rule_start}
private SET_STATEMENT ::= SET IDENT (SUB IDENT)? EQ string {pin=2 recoverWhile=rule_start}
private START_STATEMENT ::= START IDENT COMMA_SEP* {pin=2 recoverWhile=rule_start}
private STOP_STATEMENT ::= STOP IDENT COMMA_SEP* {pin=2 recoverWhile=rule_start}
private COLON_SEP ::= COLON IDENT
private COMMA_SEP ::= COMMA IDENT
private rule_start ::= !(ADD|REMOVE|BIND|UNBIND|ATTACH|DETACH|SET|NAMESPACE|REPO|INCLUDE|MOVE|NETWORK|START|STOP)